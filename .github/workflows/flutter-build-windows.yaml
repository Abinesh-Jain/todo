name: Build Windows EXE and Installer

on:
  push:
    branches:
      - '**' # Trigger for any branch
  pull_request:
    branches:
      - '**' # Trigger for any branch

jobs:
  build:
    runs-on: windows-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Install Flutter
      run: |
        git clone https://github.com/flutter/flutter.git -b stable
        echo "${{ github.workspace }}\\flutter\\bin" | Out-File -FilePath $env:GITHUB_PATH -Encoding utf8

    - name: Install dependencies
      run: flutter pub get

    - name: Enable Windows desktop support
      run: flutter config --enable-windows-desktop

    - name: Build Windows EXE
      run: flutter build windows

    - name: Verify Windows Build Output
      run: Get-ChildItem -Path build/windows/x64/runner/Release -Recurse

    - name: Install Inno Setup
      run: choco install -y innosetup

    - name: Create Inno Setup Script
      run: |
        echo '[Setup]' > installer.iss
        echo 'AppName=${{ github.event.repository.name }}' >> installer.iss
        echo 'AppVersion=1.0' >> installer.iss
        echo 'DefaultDirName={pf}\${{ github.event.repository.name }}' >> installer.iss
        echo 'OutputDir=.' >> installer.iss
        echo 'OutputBaseFilename=${{ github.event.repository.name }}' >> installer.iss
        echo '[Files]' >> installer.iss
        echo 'Source: "build/windows/x64/runner/Release/*"; DestDir: "{app}"; Flags: recursesubdirs' >> installer.iss
        echo '[Icons]' >> installer.iss
        echo 'Name: "{group}\${{ github.event.repository.name }}"; Filename: "{app}\${{ github.event.repository.name }}.exe"' >> installer.iss
        echo '[Run]' >> installer.iss
        echo 'Filename: "{app}\${{ github.event.repository.name }}.exe"; Description: "Launch ${{ github.event.repository.name }}"; Flags: nowait postinstall skipifsilent' >> installer.iss

    - name: Build Installer
      run: iscc installer.iss

    - name: List Generated Files
      run: dir /B /S .

    - name: Upload Windows Installer
      uses: actions/upload-artifact@v4
      with:
        name: windows-installer
        path: ./${{ github.event.repository.name }}.exe
